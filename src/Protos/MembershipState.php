<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: task.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use GPBMetadata\Task;

/**
 * <pre>
 * MembershipState is used to pack together the current membership state of all the nodes
 * in the caller server; and the membership updates recorded by the callee server since
 * the provided lastUpdate.
 * </pre>
 *
 * Protobuf type <code>protos.MembershipState</code>
 */
class MembershipState extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * used to find latest membershipState in case of race.
     * </pre>
     *
     * <code>uint64 counter = 1;</code>
     */
    private $counter = 0;
    /**
     * <code>map&lt;uint32, .protos.Group&gt; groups = 2;</code>
     */
    private $groups;
    /**
     * <code>map&lt;uint64, .protos.Member&gt; zeros = 3;</code>
     */
    private $zeros;
    /**
     * <code>uint64 maxLeaseId = 4;</code>
     */
    private $maxLeaseId = 0;
    /**
     * <code>uint64 maxTxnTs = 5;</code>
     */
    private $maxTxnTs = 0;
    /**
     * <code>uint64 maxRaftId = 6;</code>
     */
    private $maxRaftId = 0;
    /**
     * <code>repeated .protos.Member removed = 7;</code>
     */
    private $removed;

    public function __construct() {
        Task::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * used to find latest membershipState in case of race.
     * </pre>
     *
     * <code>uint64 counter = 1;</code>
     */
    public function getCounter()
    {
        return $this->counter;
    }

    /**
     * <pre>
     * used to find latest membershipState in case of race.
     * </pre>
     *
     * <code>uint64 counter = 1;</code>
     */
    public function setCounter($var)
    {
        GPBUtil::checkUint64($var);
        $this->counter = $var;

        return $this;
    }

    /**
     * <code>map&lt;uint32, .protos.Group&gt; groups = 2;</code>
     */
    public function getGroups()
    {
        return $this->groups;
    }

    /**
     * <code>map&lt;uint32, .protos.Group&gt; groups = 2;</code>
     */
    public function setGroups(&$var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::UINT32, \Google\Protobuf\Internal\GPBType::MESSAGE, Group::class);
        $this->groups = $arr;

        return $this;
    }

    /**
     * <code>map&lt;uint64, .protos.Member&gt; zeros = 3;</code>
     */
    public function getZeros()
    {
        return $this->zeros;
    }

    /**
     * <code>map&lt;uint64, .protos.Member&gt; zeros = 3;</code>
     */
    public function setZeros(&$var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::UINT64, \Google\Protobuf\Internal\GPBType::MESSAGE, Member::class);
        $this->zeros = $arr;

        return $this;
    }

    /**
     * <code>uint64 maxLeaseId = 4;</code>
     */
    public function getMaxLeaseId()
    {
        return $this->maxLeaseId;
    }

    /**
     * <code>uint64 maxLeaseId = 4;</code>
     */
    public function setMaxLeaseId($var)
    {
        GPBUtil::checkUint64($var);
        $this->maxLeaseId = $var;

        return $this;
    }

    /**
     * <code>uint64 maxTxnTs = 5;</code>
     */
    public function getMaxTxnTs()
    {
        return $this->maxTxnTs;
    }

    /**
     * <code>uint64 maxTxnTs = 5;</code>
     */
    public function setMaxTxnTs($var)
    {
        GPBUtil::checkUint64($var);
        $this->maxTxnTs = $var;

        return $this;
    }

    /**
     * <code>uint64 maxRaftId = 6;</code>
     */
    public function getMaxRaftId()
    {
        return $this->maxRaftId;
    }

    /**
     * <code>uint64 maxRaftId = 6;</code>
     */
    public function setMaxRaftId($var)
    {
        GPBUtil::checkUint64($var);
        $this->maxRaftId = $var;

        return $this;
    }

    /**
     * <code>repeated .protos.Member removed = 7;</code>
     */
    public function getRemoved()
    {
        return $this->removed;
    }

    /**
     * <code>repeated .protos.Member removed = 7;</code>
     */
    public function setRemoved(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, Member::class);
        $this->removed = $arr;

        return $this;
    }

}

