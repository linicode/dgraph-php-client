<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: task.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use GPBMetadata\Task;

/**
 * <pre>
 * BackupPayload is used both as a request and a response.
 * When used in request, groups represents the list of groups that need to be backed up.
 * When used in response, groups represent the list of groups that were backed up.
 * </pre>
 *
 * Protobuf type <code>protos.ExportPayload</code>
 */
class ExportPayload extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Use req_id to handle duplicate requests.
     * </pre>
     *
     * <code>uint64 req_id = 1;</code>
     */
    private $req_id = 0;
    /**
     * <pre>
     * Group id to back up.
     * </pre>
     *
     * <code>uint32 group_id = 2;</code>
     */
    private $group_id = 0;
    /**
     * <code>.protos.ExportPayload.Status status = 3;</code>
     */
    private $status = 0;
    /**
     * <code>uint64 read_ts = 4;</code>
     */
    private $read_ts = 0;

    public function __construct() {
        Task::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Use req_id to handle duplicate requests.
     * </pre>
     *
     * <code>uint64 req_id = 1;</code>
     */
    public function getReqId()
    {
        return $this->req_id;
    }

    /**
     * <pre>
     * Use req_id to handle duplicate requests.
     * </pre>
     *
     * <code>uint64 req_id = 1;</code>
     */
    public function setReqId($var)
    {
        GPBUtil::checkUint64($var);
        $this->req_id = $var;

        return $this;
    }

    /**
     * <pre>
     * Group id to back up.
     * </pre>
     *
     * <code>uint32 group_id = 2;</code>
     */
    public function getGroupId()
    {
        return $this->group_id;
    }

    /**
     * <pre>
     * Group id to back up.
     * </pre>
     *
     * <code>uint32 group_id = 2;</code>
     */
    public function setGroupId($var)
    {
        GPBUtil::checkUint32($var);
        $this->group_id = $var;

        return $this;
    }

    /**
     * <code>.protos.ExportPayload.Status status = 3;</code>
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * <code>.protos.ExportPayload.Status status = 3;</code>
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var);
        $this->status = $var;

        return $this;
    }

    /**
     * <code>uint64 read_ts = 4;</code>
     */
    public function getReadTs()
    {
        return $this->read_ts;
    }

    /**
     * <code>uint64 read_ts = 4;</code>
     */
    public function setReadTs($var)
    {
        GPBUtil::checkUint64($var);
        $this->read_ts = $var;

        return $this;
    }

}

