<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: types.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>protos.PostingList</code>
 */
class PostingList extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>repeated .protos.Posting postings = 1;</code>
     */
    private $postings;
    /**
     * <code>bytes checksum = 2;</code>
     */
    private $checksum = '';
    /**
     * <pre>
     * More inclination towards smaller values.
     * </pre>
     *
     * <code>uint64 commit = 3;</code>
     */
    private $commit = 0;

    public function __construct() {
        \GPBMetadata\Types::initOnce();
        parent::__construct();
    }

    /**
     * <code>repeated .protos.Posting postings = 1;</code>
     */
    public function getPostings()
    {
        return $this->postings;
    }

    /**
     * <code>repeated .protos.Posting postings = 1;</code>
     */
    public function setPostings(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Protos\Posting::class);
        $this->postings = $arr;

        return $this;
    }

    /**
     * <code>bytes checksum = 2;</code>
     */
    public function getChecksum()
    {
        return $this->checksum;
    }

    /**
     * <code>bytes checksum = 2;</code>
     */
    public function setChecksum($var)
    {
        GPBUtil::checkString($var, False);
        $this->checksum = $var;

        return $this;
    }

    /**
     * <pre>
     * More inclination towards smaller values.
     * </pre>
     *
     * <code>uint64 commit = 3;</code>
     */
    public function getCommit()
    {
        return $this->commit;
    }

    /**
     * <pre>
     * More inclination towards smaller values.
     * </pre>
     *
     * <code>uint64 commit = 3;</code>
     */
    public function setCommit($var)
    {
        GPBUtil::checkUint64($var);
        $this->commit = $var;

        return $this;
    }

}

