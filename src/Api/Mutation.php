<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>api.Mutation</code>
 */
class Mutation extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>bytes set_json = 1;</code>
     */
    private $set_json = '';
    /**
     * <code>bytes delete_json = 2;</code>
     */
    private $delete_json = '';
    /**
     * <code>bytes set_nquads = 3;</code>
     */
    private $set_nquads = '';
    /**
     * <code>bytes del_nquads = 4;</code>
     */
    private $del_nquads = '';
    /**
     * <code>repeated .api.NQuad set = 10;</code>
     */
    private $set;
    /**
     * <code>repeated .api.NQuad del = 11;</code>
     */
    private $del;
    /**
     * <code>uint64 start_ts = 13;</code>
     */
    private $start_ts = 0;
    /**
     * <code>bool commit_now = 14;</code>
     */
    private $commit_now = false;
    /**
     * <code>bool ignore_index_conflict = 15;</code>
     */
    private $ignore_index_conflict = false;

    public function __construct() {
        \GPBMetadata\Api::initOnce();
        parent::__construct();
    }

    /**
     * <code>bytes set_json = 1;</code>
     */
    public function getSetJson()
    {
        return $this->set_json;
    }

    /**
     * <code>bytes set_json = 1;</code>
     */
    public function setSetJson($var)
    {
        GPBUtil::checkString($var, False);
        $this->set_json = $var;

        return $this;
    }

    /**
     * <code>bytes delete_json = 2;</code>
     */
    public function getDeleteJson()
    {
        return $this->delete_json;
    }

    /**
     * <code>bytes delete_json = 2;</code>
     */
    public function setDeleteJson($var)
    {
        GPBUtil::checkString($var, False);
        $this->delete_json = $var;

        return $this;
    }

    /**
     * <code>bytes set_nquads = 3;</code>
     */
    public function getSetNquads()
    {
        return $this->set_nquads;
    }

    /**
     * <code>bytes set_nquads = 3;</code>
     */
    public function setSetNquads($var)
    {
        GPBUtil::checkString($var, False);
        $this->set_nquads = $var;

        return $this;
    }

    /**
     * <code>bytes del_nquads = 4;</code>
     */
    public function getDelNquads()
    {
        return $this->del_nquads;
    }

    /**
     * <code>bytes del_nquads = 4;</code>
     */
    public function setDelNquads($var)
    {
        GPBUtil::checkString($var, False);
        $this->del_nquads = $var;

        return $this;
    }

    /**
     * <code>repeated .api.NQuad set = 10;</code>
     */
    public function getSet()
    {
        return $this->set;
    }

    /**
     * <code>repeated .api.NQuad set = 10;</code>
     */
    public function setSet(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Api\NQuad::class);
        $this->set = $arr;

        return $this;
    }

    /**
     * <code>repeated .api.NQuad del = 11;</code>
     */
    public function getDel()
    {
        return $this->del;
    }

    /**
     * <code>repeated .api.NQuad del = 11;</code>
     */
    public function setDel(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Api\NQuad::class);
        $this->del = $arr;

        return $this;
    }

    /**
     * <code>uint64 start_ts = 13;</code>
     */
    public function getStartTs()
    {
        return $this->start_ts;
    }

    /**
     * <code>uint64 start_ts = 13;</code>
     */
    public function setStartTs($var)
    {
        GPBUtil::checkUint64($var);
        $this->start_ts = $var;

        return $this;
    }

    /**
     * <code>bool commit_now = 14;</code>
     */
    public function getCommitNow()
    {
        return $this->commit_now;
    }

    /**
     * <code>bool commit_now = 14;</code>
     */
    public function setCommitNow($var)
    {
        GPBUtil::checkBool($var);
        $this->commit_now = $var;

        return $this;
    }

    /**
     * <code>bool ignore_index_conflict = 15;</code>
     */
    public function getIgnoreIndexConflict()
    {
        return $this->ignore_index_conflict;
    }

    /**
     * <code>bool ignore_index_conflict = 15;</code>
     */
    public function setIgnoreIndexConflict($var)
    {
        GPBUtil::checkBool($var);
        $this->ignore_index_conflict = $var;

        return $this;
    }

}

