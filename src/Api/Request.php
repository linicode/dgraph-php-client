<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>api.Request</code>
 */
class Request extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string query = 1;</code>
     */
    private $query = '';
    /**
     * <pre>
     * Support for GraphQL like variables.
     * </pre>
     *
     * <code>map&lt;string, string&gt; vars = 2;</code>
     */
    private $vars;
    /**
     * <code>uint64 start_ts = 13;</code>
     */
    private $start_ts = 0;
    /**
     * <code>.api.LinRead lin_read = 14;</code>
     */
    private $lin_read = null;

    public function __construct() {
        \GPBMetadata\Api::initOnce();
        parent::__construct();
    }

    /**
     * <code>string query = 1;</code>
     */
    public function getQuery()
    {
        return $this->query;
    }

    /**
     * <code>string query = 1;</code>
     */
    public function setQuery($var)
    {
        GPBUtil::checkString($var, True);
        $this->query = $var;

        return $this;
    }

    /**
     * <pre>
     * Support for GraphQL like variables.
     * </pre>
     *
     * <code>map&lt;string, string&gt; vars = 2;</code>
     */
    public function getVars()
    {
        return $this->vars;
    }

    /**
     * <pre>
     * Support for GraphQL like variables.
     * </pre>
     *
     * <code>map&lt;string, string&gt; vars = 2;</code>
     */
    public function setVars(&$var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->vars = $arr;

        return $this;
    }

    /**
     * <code>uint64 start_ts = 13;</code>
     */
    public function getStartTs()
    {
        return $this->start_ts;
    }

    /**
     * <code>uint64 start_ts = 13;</code>
     */
    public function setStartTs($var)
    {
        GPBUtil::checkUint64($var);
        $this->start_ts = $var;

        return $this;
    }

    /**
     * <code>.api.LinRead lin_read = 14;</code>
     */
    public function getLinRead()
    {
        return $this->lin_read;
    }

    /**
     * <code>.api.LinRead lin_read = 14;</code>
     */
    public function setLinRead(&$var)
    {
        GPBUtil::checkMessage($var, \Api\LinRead::class);
        $this->lin_read = $var;

        return $this;
    }

}

